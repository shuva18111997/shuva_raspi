//#include <Wire.h>
#include <Adafruit_GFX.h>
#include <Adafruit_SSD1306.h>
//Website is --> http://marlinfw.org/tools/u8glib/converter.html

#define posX 0
#define posY 0

#define SCREEN_WIDTH 128 // OLED display width, in pixels
#define SCREEN_HEIGHT 64 // OLED display height, in pixels

// Declaration for an SSD1306 display connected to I2C (SDA, SCL pins)
#define OLED_RESET     4 // Reset pin # (or -1 if sharing Arduino reset pin)
Adafruit_SSD1306 display(SCREEN_WIDTH, SCREEN_HEIGHT, &Wire, OLED_RESET);

#define LOGO_HEIGHT   64
#define LOGO_WIDTH    64
static const unsigned char PROGMEM logo_bmp[] =
{ 
  B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,
  B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,
  B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,
  B00000000,B00000000,B00000000,B01111111,B11111110,B00000000,B00000000,B00000000,
  B00000000,B00000000,B00000011,B11111111,B11111111,B11000000,B00000000,B00000000,
  B00000000,B00000000,B00011111,B11111111,B11111111,B11111000,B00000000,B00000000,
  B00000000,B00000000,B01111111,B11111111,B11111111,B11111110,B00000000,B00000000,
  B00000000,B00000000,B11111111,B11111111,B11111111,B11111111,B00000000,B00000000,
  B00000000,B00000011,B11111111,B11111111,B11111111,B11111111,B11000000,B00000000,
  B00000000,B00000111,B11111111,B11111111,B11111111,B11111111,B11100000,B00000000,
  B00000000,B00001111,B11111111,B11111111,B11111111,B11111111,B11110000,B00000000,
  B00000000,B00011111,B11111111,B11111111,B11111111,B11111111,B11111000,B00000000,
  B00000000,B00111111,B11111111,B11111111,B11111111,B11111111,B11111100,B00000000,
  B00000000,B01111111,B11111111,B11111111,B11111111,B11111111,B11111110,B00000000,
  B00000000,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B00000000,
  B00000000,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B00000000,
  B00000001,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B10000000,
  B00000011,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11000000,
  B00000011,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11000000,
  B00000111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11100000,
  B00000111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11100000,
  B00000111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11100000,
  B00001111,B11111110,B00000000,B11111111,B11111111,B00000000,B01111111,B11110000,
  B00001111,B11111100,B00000000,B00111111,B11111100,B00000000,B00011111,B11110000,
  B00001111,B11110000,B00000000,B00011111,B11111000,B00000000,B00001111,B11110000,
  B00011111,B11100000,B00000000,B00001111,B11110000,B00000000,B00000111,B11111000,
  B00011111,B11000000,B00000000,B00000111,B11100000,B00000000,B00000011,B11111000,
  B00011111,B11000000,B00111100,B00000011,B11000000,B00011110,B00000001,B11111000,
  B00011111,B10000000,B11111111,B00000001,B10000000,B01111111,B10000001,B11111000,
  B00011111,B10000001,B11111111,B10000000,B00000000,B11110011,B10000000,B11111000,
  B00011111,B10000011,B11111111,B11000000,B00000001,B11100011,B11000000,B11111000,
  B00011111,B00000011,B11111111,B11100000,B00000011,B11100011,B11000000,B11111000,
  B00011111,B00000011,B00000000,B11110000,B00000111,B10000000,B11100000,B11111000,
  B00011111,B00000011,B00000000,B01110000,B00001111,B00000000,B01100000,B11111000,
  B00011111,B00000011,B10000000,B11100000,B00000111,B10000000,B11100000,B11111000,
  B00011111,B00000011,B11111111,B11000000,B00000011,B11100011,B11000000,B11111000,
  B00011111,B10000001,B11111111,B10000000,B00000001,B11100011,B11000000,B11111000,
  B00011111,B10000001,B11111111,B00000000,B10000000,B11110111,B10000001,B11111000,
  B00011111,B10000000,B01111110,B00000001,B11000000,B00111111,B00000001,B11111000,
  B00001111,B11000000,B00000000,B00000011,B11100000,B00000000,B00000011,B11110000,
  B00001111,B11100000,B00000000,B00000111,B11110000,B00000000,B00000011,B11110000,
  B00001111,B11110000,B00000000,B00001111,B11111000,B00000000,B00000111,B11110000,
  B00000111,B11111000,B00000000,B00011111,B11111100,B00000000,B00011111,B11110000,
  B00000111,B11111100,B00000000,B01111111,B11111110,B00000000,B00111111,B11100000,
  B00000111,B11111111,B10000001,B11111111,B11111111,B11000001,B11111111,B11100000,
  B00000011,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11000000,
  B00000011,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11000000,
  B00000001,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B10000000,
  B00000000,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B00000000,
  B00000000,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B00000000,
  B00000000,B01111111,B11111111,B11111111,B11111111,B11111111,B11111110,B00000000,
  B00000000,B00111111,B11111111,B11111111,B11111111,B11111111,B11111100,B00000000,
  B00000000,B00011111,B11111111,B11111111,B11111111,B11111111,B11111000,B00000000,
  B00000000,B00001111,B11111111,B11111111,B11111111,B11111111,B11110000,B00000000,
  B00000000,B00000111,B11111111,B11111111,B11111111,B11111111,B11100000,B00000000,
  B00000000,B00000011,B11111111,B11111111,B11111111,B11111111,B11000000,B00000000,
  B00000000,B00000000,B11111111,B11111111,B11111111,B11111111,B00000000,B00000000,
  B00000000,B00000000,B01111111,B11111111,B11111111,B11111110,B00000000,B00000000,
  B00000000,B00000000,B00011111,B11111111,B11111111,B11111000,B00000000,B00000000,
  B00000000,B00000000,B00000011,B11111111,B11111111,B11000000,B00000000,B00000000,
  B00000000,B00000000,B00000000,B01111111,B11111110,B00000000,B00000000,B00000000,
  B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,
  B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,
  B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000
  };

void setup() {
  Serial.begin(9600);
  //Wire.begin(SDA, SCL);
  if (!display.begin(SSD1306_SWITCHCAPVCC, 0x3C)) { // Address 0x3C for 128x32
    Serial.println(F("SSD1306 allocation failed"));
    for (;;); // Don't proceed, loop forever
  }

  display.clearDisplay();
  display.drawPixel(10, 10, WHITE);

  display.display();

  testdrawbitmap();    // Draw a small bitmap image
}

void loop() {
}

void testdrawbitmap(void) {
  display.clearDisplay();

  display.drawBitmap(posX, posY, logo_bmp, LOGO_WIDTH, LOGO_HEIGHT, 1);
  display.display();
  delay(1000);
}
